{
  "version": 3,
  "sources": ["../dictionary/conjunctions.ts", "../dictionary/prepositions.ts", "../index.ts"],
  "sourcesContent": ["export const conjunctions = [\n    'and',\n    'but',\n    'or',\n    'so',\n    'yet',\n    'nor',\n    'for',\n    'after',\n    'although',\n    'as',\n    'because',\n    'before',\n    'if',\n    'once',\n    'since',\n    'that',\n    'though',\n    'till',\n    'unless',\n    'while',\n]\n", "export const prepositions = [\n    'aboard',\n    'about',\n    'above',\n    'across',\n    'after',\n    'against',\n    'along',\n    'amid',\n    'among',\n    'anti',\n    'around',\n    'as',\n    'at',\n    'before',\n    'behind',\n    'below',\n    'beneath',\n    'beside',\n    'besides',\n    'between',\n    'beyond',\n    'but',\n    'by',\n    'concerning',\n    'considering',\n    'despite',\n    'down',\n    'during',\n    'except',\n    'excepting',\n    'excluding',\n    'following',\n    'for',\n    'from',\n    'in',\n    'inside',\n    'into',\n    'like',\n    'minus',\n    'near',\n    'of',\n    'off',\n    'on',\n    'onto',\n    'opposite',\n    'outside',\n    'over',\n    'past',\n    'per',\n    'plus',\n    'regarding',\n    'round',\n    'save',\n    'since',\n    'than',\n    'through',\n    'to',\n    'toward',\n    'towards',\n    'under',\n    'underneath',\n    'unlike',\n    'until',\n    'up',\n    'upon',\n    'versus',\n    'via',\n    'with',\n    'within',\n    'without']\n", "import { conjunctions } from \"./dictionary/conjunctions\"\nimport { prepositions } from \"./dictionary/prepositions\"\n\n\nenum HlClass {\n    None = '',\n    First = 'first',\n    Conjunction = 'conjunction',\n    Preposition = 'preposition',\n    Punctuation = 'punctuation',\n    Center = 'center'\n}\nconst base: Map<Element, string> = new Map()\nconst main = () => {\n    const div = document.getElementById('text')\n    if (!div) return\n    for (const child of div.children) {\n        base.set(child, child.textContent ?? '')\n    }\n}\n\nwindow.onload = function() {\n    const div = document.getElementById('text')\n\n    if (!div) return\n\n    for (const child of div.children)\n        lexer(child, child.innerHTML.toString()!)\n}\n\nwindow.render = function() {\n\n    const div = document.getElementById('text')\n    if (!div) return\n\n\n\n    for (const child of div.children) {\n        if ((document.getElementById('show-highlights') as HTMLInputElement).checked) {\n            const tokens = tokensMap.get(child)\n            if (!tokens) continue\n            const parsed = parser(tokens)\n            child.innerHTML = parsed\n        } else {\n            child.innerHTML = base.get(child) ?? ''\n        }\n    }\n\n}\ntype Token = {\n    text: string\n    type: HlClass\n    scentanceStart: boolean\n    position: number\n    children?: Token[]\n    hasChildren: () => boolean\n}\n\nconst punctuation = ['.', ',']\nconst htmlRegex = /^<\\/*[a-z]+(?![^>]*\\/>)[^>]*>$/\nconst lineLength = 12\nconst tokensMap: Map<Element, Token[]> = new Map()\n\nfunction lexer(element: Element, str: string) {\n\n    const words = str.trim().split(/<\\/*[a-z]+(?![^>]*\\/>)[^>]*>|\\s/)\n    const elementTokens: Token[] = []\n    let idx = 0\n    for (const word of words) {\n        if (word.length === 0) continue\n        const fullWord = word.replace(/[\\.,\\s\\n]/g, '').replace(/\\<.*\\>/g, '').replace(/\\<\\/.*\\>/g, '')\n        let currentWord = fullWord\n\n        if (word.match(htmlRegex)) {\n\n            elementTokens.push({\n                type: HlClass.None,\n                text: word,\n                position: 0,\n                hasChildren: () => false,\n                scentanceStart: false\n            })\n            continue\n        }\n\n\n        const wordToken: Token & { children: Token[] } = {\n            type: getWordClass(fullWord),\n            text: word,\n            scentanceStart: false,\n            position: 0,\n            children: [],\n            hasChildren() { return Object.hasOwn(this, 'children') }\n        }\n\n        if (punctuation.includes(word.at(-1) ?? '')) {\n            wordToken.children.push(createToken(\n                HlClass.Punctuation,\n                word.at(-1) as string,\n                word.length - 1,\n                wordToken.scentanceStart,\n            ))\n        }\n\n        wordToken.children.push(createToken(\n            HlClass.First,\n            currentWord.slice(0, 1),\n            0,\n            wordToken.scentanceStart,\n        ))\n\n        if (fullWord.length > 8) {\n            wordToken.children.push(createToken(\n                HlClass.Center,\n                currentWord.slice(2, -2),\n                2,\n                wordToken.scentanceStart,\n            ))\n        }\n        elementTokens.push(wordToken)\n\n        if (idx > 0 && idx % lineLength === 0) elementTokens.push(createToken(HlClass.None, '</br>', 0, false))\n        idx++\n    }\n    tokensMap.set(element, elementTokens)\n\n}\n\nfunction createToken(type: HlClass, text: string, position: number, scentanceStart: boolean) {\n    return {\n        type,\n        text,\n        position,\n        scentanceStart,\n        hasChildren() { return false }\n    }\n}\nfunction parser(tokens: Token[]) {\n    return tokens.map((token) => {\n        const highlights: string[] = []\n        if (!token.hasChildren()) return highlightWrap(token.text, token.type)\n        const children = token.children!.sort((a, b) => a.position - b.position)\n\n        let remainder = token.text\n        for (const child of children) {\n            if (child.type !== HlClass.None && !(document.getElementById('hl-' + child.type) as HTMLInputElement)!.checked) {\n                continue\n            }\n\n            const offsetChildPosition = child.position - (token.text.length - remainder.length)\n            const before = remainder.slice(0, offsetChildPosition)\n            const hl = highlightWrap(remainder.slice(offsetChildPosition, offsetChildPosition + child.text.length), child.type)\n            remainder = remainder.slice(offsetChildPosition + child.text.length)\n            if (before.length) highlights.push(before)\n            highlights.push(hl)\n        }\n\n        if (remainder.length) highlights.push(remainder)\n        const finalText = highlights.join('')\n        return token.type === HlClass.None || !(document.getElementById('hl - ' + token.type) as HTMLInputElement)!.checked ? finalText : highlightWrap(finalText, token.type)\n    }).join(' ')\n}\n\nfunction highlightWrap(string: string, hlClass: string) {\n    return `<span class='hl-${hlClass}'>${string}</span>`\n\n}\n\nfunction getWordClass(word: string) {\n    if (conjunctions.includes(word)) return HlClass.Conjunction\n    if (prepositions.includes(word)) return HlClass.Preposition\n    return HlClass.None\n}\n\nmain()\n"],
  "mappings": ";;;AAAO,MAAM,eAAe;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;;;ACrBO,MAAM,eAAe;AAAA,IACxb,MAAM,OAA6B,oBAAI,IAAI;AAC3C,MAAM,OAAO,MAAM;AACf,UAAM,MAAM,SAAS,eAAe,MAAM;AAC1C,QAAI,CAAC;AAAK;AACV,eAAW,SAAS,IAAI,UAAU;AAC9B,WAAK,IAAI,OAAO,MAAM,eAAe,EAAE;AAAA,IAC3C;AAAA,EACJ;AAEA,SAAO,SAAS,WAAW;AACvB,UAAM,MAAM,SAAS,eAAe,MAAM;AAE1C,QAAI,CAAC;AAAK;AAEV,eAAW,SAAS,IAAI;AACpB,YAAM,OAAO,MAAM,UAAU,SAAS,CAAE;AAAA,EAChD;AAEA,SAAO,SAAS,WAAW;AAEvB,UAAM,MAAM,SAAS,eAAe,MAAM;AAC1C,QAAI,CAAC;AAAK;AAIV,eAAW,SAAS,IAAI,UAAU;AAC9B,UAAK,SAAS,eAAe,iBAAiB,EAAuB,SAAS;AAC1E,cAAM,SAAS,UAAU,IAAI,KAAK;AAClC,YAAI,CAAC;AAAQ;AACb,cAAM,SAAS,OAAO,MAAM;AAC5B,cAAM,YAAY;AAAA,MACtB,OAAO;AACH,cAAM,YAAY,KAAK,IAAI,KAAK,KAAK;AAAA,MACzC;AAAA,IACJ;AAAA,EAEJ;AAUA,MAAM,cAAc,CAAC,KAAK,GAAG;AAC7B,MAAM,YAAY;AAClB,MAAM,aAAa;AACnB,MAAM,YAAmC,oBAAI,IAAI;AAEjD,WAAS,MAAM,SAAkB,KAAa;AAE1C,UAAM,QAAQ,IAAI,KAAK,EAAE,MAAM,iCAAiC;AAChE,UAAM,gBAAyB,CAAC;AAChC,QAAI,MAAM;AACV,eAAW,QAAQ,OAAO;AACtB,UAAI,KAAK,WAAW;AAAG;AACvB,YAAM,WAAW,KAAK,QAAQ,cAAc,EAAE,EAAE,QAAQ,WAAW,EAAE,EAAE,QAAQ,aAAa,EAAE;AAC9F,UAAI,cAAc;AAElB,UAAI,KAAK,MAAM,SAAS,GAAG;AAEvB,sBAAc,KAAK;AAAA,UACf,MAAM;AAAA,UACN,MAAM;AAAA,UACN,UAAU;AAAA,UACV,aAAa,MAAM;AAAA,UACnB,gBAAgB;AAAA,QACpB,CAAC;AACD;AAAA,MACJ;AAGA,YAAM,YAA2C;AAAA,QAC7C,MAAM,aAAa,QAAQ;AAAA,QAC3B,MAAM;AAAA,QACN,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,UAAU,CAAC;AAAA,QACX,cAAc;AAAE,iBAAO,OAAO,OAAO,MAAM,UAAU;AAAA,QAAE;AAAA,MAC3D;AAEA,UAAI,YAAY,SAAS,KAAK,GAAG,EAAE,KAAK,EAAE,GAAG;AACzC,kBAAU,SAAS,KAAK;AAAA,UACpB;AAAA,UACA,KAAK,GAAG,EAAE;AAAA,UACV,KAAK,SAAS;AAAA,UACd,UAAU;AAAA,QACd,CAAC;AAAA,MACL;AAEA,gBAAU,SAAS,KAAK;AAAA,QACpB;AAAA,QACA,YAAY,MAAM,GAAG,CAAC;AAAA,QACtB;AAAA,QACA,UAAU;AAAA,MACd,CAAC;AAED,UAAI,SAAS,SAAS,GAAG;AACrB,kBAAU,SAAS,KAAK;AAAA,UACpB;AAAA,UACA,YAAY,MAAM,GAAG,EAAE;AAAA,UACvB;AAAA,UACA,UAAU;AAAA,QACd,CAAC;AAAA,MACL;AACA,oBAAc,KAAK,SAAS;AAE5B,UAAI,MAAM,KAAK,MAAM,eAAe;AAAG,sBAAc,KAAK,YAAY,eAAc,SAAS,GAAG,KAAK,CAAC;AACtG;AAAA,IACJ;AACA,cAAU,IAAI,SAAS,aAAa;AAAA,EAExC;AAEA,WAAS,YAAY,MAAe,MAAc,UAAkB,gBAAyB;AACzF,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc;AAAE,eAAO;AAAA,MAAM;AAAA,IACjC;AAAA,EACJ;AACA,WAAS,OAAO,QAAiB;AAC7B,WAAO,OAAO,IAAI,CAAC,UAAU;AACzB,YAAM,aAAuB,CAAC;AAC9B,UAAI,CAAC,MAAM,YAAY;AAAG,eAAO,cAAc,MAAM,MAAM,MAAM,IAAI;AACrE,YAAM,WAAW,MAAM,SAAU,KAAK,CAAC,GAAG,MAAM,EAAE,WAAW,EAAE,QAAQ;AAEvE,UAAI,YAAY,MAAM;AACtB,iBAAW,SAAS,UAAU;AAC1B,YAAI,MAAM,SAAS,iBAAgB,CAAE,SAAS,eAAe,QAAQ,MAAM,IAAI,EAAwB,SAAS;AAC5G;AAAA,QACJ;AAEA,cAAM,sBAAsB,MAAM,YAAY,MAAM,KAAK,SAAS,UAAU;AAC5E,cAAM,SAAS,UAAU,MAAM,GAAG,mBAAmB;AACrD,cAAM,KAAK,cAAc,UAAU,MAAM,qBAAqB,sBAAsB,MAAM,KAAK,MAAM,GAAG,MAAM,IAAI;AAClH,oBAAY,UAAU,MAAM,sBAAsB,MAAM,KAAK,MAAM;AACnE,YAAI,OAAO;AAAQ,qBAAW,KAAK,MAAM;AACzC,mBAAW,KAAK,EAAE;AAAA,MACtB;AAEA,UAAI,UAAU;AAAQ,mBAAW,KAAK,SAAS;AAC/C,YAAM,YAAY,WAAW,KAAK,EAAE;AACpC,aAAO,MAAM,SAAS,iBAAgB,CAAE,SAAS,eAAe,UAAU,MAAM,IAAI,EAAwB,UAAU,YAAY,cAAc,WAAW,MAAM,IAAI;AAAA,IACzK,CAAC,EAAE,KAAK,GAAG;AAAA,EACf;AAEA,WAAS,cAAc,QAAgB,SAAiB;AACpD,WAAO,mBAAmB,OAAO,KAAK,MAAM;AAAA,EAEhD;AAEA,WAAS,aAAa,MAAc;AAChC,QAAI,aAAa,SAAS,IAAI;AAAG,aAAO;AACxC,QAAI,aAAa,SAAS,IAAI;AAAG,aAAO;AACxC,WAAO;AAAA,EACX;AAEA,OAAK;",
  "names": []
}
