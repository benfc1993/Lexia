{
  "version": 3,
  "sources": ["../dictionary/conjunctions.ts", "../dictionary/prepositions.ts", "../index.ts"],
  "sourcesContent": ["export const conjunctions = [\n    'and',\n    'but',\n    'or',\n    'so',\n    'yet',\n    'nor',\n    'for',\n    'after',\n    'although',\n    'as',\n    'because',\n    'before',\n    'if',\n    'once',\n    'since',\n    'that',\n    'though',\n    'till',\n    'unless',\n    'while',\n]\n", "export const prepositions = [\n    'aboard',\n    'about',\n    'above',\n    'across',\n    'after',\n    'against',\n    'along',\n    'amid',\n    'among',\n    'anti',\n    'around',\n    'as',\n    'at',\n    'before',\n    'behind',\n    'below',\n    'beneath',\n    'beside',\n    'besides',\n    'between',\n    'beyond',\n    'but',\n    'by',\n    'concerning',\n    'considering',\n    'despite',\n    'down',\n    'during',\n    'except',\n    'excepting',\n    'excluding',\n    'following',\n    'for',\n    'from',\n    'in',\n    'inside',\n    'into',\n    'like',\n    'minus',\n    'near',\n    'of',\n    'off',\n    'on',\n    'onto',\n    'opposite',\n    'outside',\n    'over',\n    'past',\n    'per',\n    'plus',\n    'regarding',\n    'round',\n    'save',\n    'since',\n    'than',\n    'through',\n    'to',\n    'toward',\n    'towards',\n    'under',\n    'underneath',\n    'unlike',\n    'until',\n    'up',\n    'upon',\n    'versus',\n    'via',\n    'with',\n    'within',\n    'without']\n", "import { conjunctions } from \"./dictionary/conjunctions\"\nimport { prepositions } from \"./dictionary/prepositions\"\n\nconst main = () => {\n    const div = document.getElementById('text')\n    if (!div) return\n    const text = div.innerText\n\n    const parsed = parse(text)\n    div.innerHTML = parsed\n\n}\n\nconst punctuation = ['.', ',']\n\nfunction parse(str: string): string {\n    let startIndex = 0\n    let currentWord = ''\n    let punctMark = ''\n    let newScentence = true\n    let firstWord = true\n\n    for (let i = 0; i < str.length; i++) {\n        const char = str[i]\n        const isPunctuation = punctuation.includes(char)\n\n        if (char === ' ' || isPunctuation) {\n            if (isPunctuation) {\n                punctMark = char\n            }\n            const wordClass = getWordClass(currentWord)\n\n            // if (currentWord && currentWord !== ' ' && newScentence) {\n            //     if (newScentence) console.log(currentWord)\n            //     const firstChar = currentWord.at(-0) ?? ''\n            //     const addition = `<span class='hl-new-scentence'> ${firstChar}</span>`\n            //     str = str.slice(0, startIndex) + addition + str.slice(startIndex + (1 + (firstWord ? 0 : 1)))\n            //     i += addition.length\n            //     startIndex = i\n            //     currentWord = currentWord.slice(1)\n            //     newScentence = false\n            // }\n\n\n            if (wordClass) {\n                const { string, insertLength } = highlightText(str, currentWord, startIndex, wordClass)\n                str = string\n                i += insertLength - currentWord.length - 1\n            }\n\n            startIndex = i\n            if (isPunctuation) {\n                const { string, insertLength } = highlightText(str, punctMark, startIndex, 'punctuation')\n                str = string\n                i += insertLength - currentWord.length - 1\n                if (punctMark === '.') newScentence = true\n            }\n\n\n            startIndex += 1\n            currentWord = ''\n            firstWord = false\n            punctMark = ''\n            continue\n        }\n        currentWord += char\n    }\n    return str\n}\n\nfunction getWordClass(word: string) {\n    if (conjunctions.includes(word)) return 'conjunction'\n    if (prepositions.includes(word)) return 'preposition'\n    return null\n}\n\nfunction highlightText(str: string, word: string, startIndex: number, highlightClass: string) {\n    const highlight = `<span class='hl-${highlightClass}'>${word}</span>`\n    return {\n        string: str.slice(0, startIndex) + highlight + str.slice(startIndex + word.length),\n        insertLength: highlight.length\n    }\n}\n\nmain()\n"],
  "mappings": ";;;AAAO,MAAM,eAAe;AAAA,IACxB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;;;ACrBO,MAAM,eAAe;AAAA,IACxnEb,MAAM,OAAO,MAAM;AACf,UAAM,MAAM,SAAS,eAAe,MAAM;AAC1C,QAAI,CAAC;AAAK;AACV,UAAM,OAAO,IAAI;AAEjB,UAAM,SAAS,MAAM,IAAI;AACzB,QAAI,YAAY;AAAA,EAEpB;AAEA,MAAM,cAAc,CAAC,KAAK,GAAG;AAE7B,WAAS,MAAM,KAAqB;AAChC,QAAI,aAAa;AACjB,QAAI,cAAc;AAClB,QAAI,YAAY;AAChB,QAAI,eAAe;AACnB,QAAI,YAAY;AAEhB,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,YAAM,OAAO,IAAI,CAAC;AAClB,YAAM,gBAAgB,YAAY,SAAS,IAAI;AAE/C,UAAI,SAAS,OAAO,eAAe;AAC/B,YAAI,eAAe;AACf,sBAAY;AAAA,QAChB;AACA,cAAM,YAAY,aAAa,WAAW;AAc1C,YAAI,WAAW;AACX,gBAAM,EAAE,QAAQ,aAAa,IAAI,cAAc,KAAK,aAAa,YAAY,SAAS;AACtF,gBAAM;AACN,eAAK,eAAe,YAAY,SAAS;AAAA,QAC7C;AAEA,qBAAa;AACb,YAAI,eAAe;AACf,gBAAM,EAAE,QAAQ,aAAa,IAAI,cAAc,KAAK,WAAW,YAAY,aAAa;AACxF,gBAAM;AACN,eAAK,eAAe,YAAY,SAAS;AACzC,cAAI,cAAc;AAAK,2BAAe;AAAA,QAC1C;AAGA,sBAAc;AACd,sBAAc;AACd,oBAAY;AACZ,oBAAY;AACZ;AAAA,MACJ;AACA,qBAAe;AAAA,IACnB;AACA,WAAO;AAAA,EACX;AAEA,WAAS,aAAa,MAAc;AAChC,QAAI,aAAa,SAAS,IAAI;AAAG,aAAO;AACxC,QAAI,aAAa,SAAS,IAAI;AAAG,aAAO;AACxC,WAAO;AAAA,EACX;AAEA,WAAS,cAAc,KAAa,MAAc,YAAoB,gBAAwB;AAC1F,UAAM,YAAY,mBAAmB,cAAc,KAAK,IAAI;AAC5D,WAAO;AAAA,MACH,QAAQ,IAAI,MAAM,GAAG,UAAU,IAAI,YAAY,IAAI,MAAM,aAAa,KAAK,MAAM;AAAA,MACjF,cAAc,UAAU;AAAA,IAC5B;AAAA,EACJ;AAEA,OAAK;",
  "names": []
}
